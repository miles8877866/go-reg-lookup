// 讀取部署產物 data.json；若是 {ok:true,data:[...]} 也會自動相容
const $ = (s) => document.querySelector(s);

let raw = [];         // 原始遮蔽資料
let groups = new Set();

async function loadData(){
  const res = await fetch(`./data.json?v=${Date.now()}`, { cache:'no-store' });
  let j = await res.json();
  if (j && Array.isArray(j.data)) j = j.data; // 容錯：支援 {ok:true,data:[...]}

  // 正規化並建立群組清單
  const last3 = (phoneLast4) => String(phoneLast4||'').slice(-3);
  raw = j.map((r,i)=>({
    idx: i+1,
    maskedName: r.maskedName ?? r.name ?? '',
    phoneLast3: last3(r.phoneLast4 ?? r.phone),
    group: r.group ?? '',
    createdAt: Number(r.createdAt||0) || 0
  })).sort((a,b)=>(a.createdAt||0)-(b.createdAt||0));

  groups = new Set(raw.map(x=>x.group).filter(Boolean));
  renderGroupSelect();
  // 首次渲染（無條件）
  renderResults();
}

function renderGroupSelect(){
  const sel = $('#group');
  // 清空保留第一個空選項
  sel.querySelectorAll('option:not(:first-child)').forEach(o=>o.remove());
  [...groups].sort().forEach(g=>{
    const opt = document.createElement('option');
    opt.value = g; opt.textContent = g;
    sel.appendChild(opt);
  });
}

function applyFilter(){
  const g = $('#group').value.trim();
  const q = $('#q').value.trim();
  return raw.filter(item=>{
    const byGroup = g ? item.group === g : true;
    if (!q) return byGroup;
    // 姓名包含 或 電話末碼結尾相符（支援 1~3 碼）
    const hitName = item.maskedName.includes(q);
    const hitPhone = item.phoneLast3.endsWith(q.replace(/\D/g,''));
    return byGroup && (hitName || hitPhone);
  });
}

function renderResults(){
  const list = applyFilter();
  const rowsEl = $('#rows');
  const emptyEl = $('#empty');
  const q = $('#q').value.trim();
  const g = $('#group').value.trim();
  const title = (() => {
    if (q && g) return `搜尋「${q}」且組別「${g}」的結果`;
    if (q) return `搜尋「${q}」的結果`;
    if (g) return `組別「${g}」的名單`;
    return '查詢結果';
  })();
  $('#result-title').textContent = title;

  if (!list.length){
    rowsEl.innerHTML = '';
    emptyEl.hidden = false;
    return;
  }
  emptyEl.hidden = true;

  rowsEl.innerHTML = list.map((r,i)=>`
    <div class="tr row">
      <div class="td num">${i+1}</div>
      <div class="td name">${escapeHtml(r.maskedName)}</div>
      <div class="td phone">*******${escapeHtml(r.phoneLast3)}</div>
      <div class="td group">${escapeHtml(r.group)}</div>
    </div>
  `).join('');
}

function escapeHtml(s){
  return String(s??'').replace(/[&<>"']/g, m => ({
    '&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'
  }[m]));
}

/* 事件 */
$('#btn-search').addEventListener('click', renderResults);
$('#q').addEventListener('keydown', (e)=>{ if(e.key==='Enter') renderResults(); });
$('#group').addEventListener('change', renderResults);
$('#btn-home').addEventListener('click', ()=>{ $('#group').value=''; $('#q').value=''; renderResults(); });

document.addEventListener('DOMContentLoaded', loadData);
